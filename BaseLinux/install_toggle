#!/bin/bash
# SPDX-License-Identifier: GPL-2.0

set -e
for f in `ls ${VERSIONING}/*`
  do
    source $f
  done
if [ -f "customize.sh" ] ; then
  source customize.sh
fi
cd Packages

echo "** install_toggle **"
set -x

# first get the dependencies
apt install -y python3
apt install -y \
 gir1.2-clutter-1.0=1.26.0+dfsg-10.1 \
 gir1.2-cogl-1.0=1.22.2-2.1 \
 gir1.2-coglpango-1.0=1.22.2-2.1 \
 gir1.2-mash-0.3-0=0.3.0-1 \
 gir1.2-mx-2.0=1.99.4-1.1 \
 libcairo2-dev \
 libclutter-1.0-0=1.26.0+dfsg-10.1 \
 libclutter-1.0-common=1.26.0+dfsg-10.1  \
 libclutter-imcontext-0.1-0=0.1.4-3.1 \
 libclutter-imcontext-0.1-bin=0.1.4-3.1 \
 libcluttergesture-0.0.2-0=0.0.2.1-7.2 \
 libcogl-common=1.22.2-2.1 \
 libcogl-pango20=1.22.2-2.1 \
 libcogl-path20=1.22.2-2.1 \
 libcogl20=1.22.2-2.1 \
 libmash-0.3-0=0.3.0-1 \
 libmx-2.0-0=1.99.4-1.1 \
 libmx-bin=1.99.4-1.1 \
 libmx-common=1.99.4-1.1 \
 python3-networkmanager \
 python3-cairo \
 python3-gi-cairo \
 python3-tornado \
 python3-pip \
 python3-venv \
 python3-dbus \
 libdbus-1-dev \
 libglib2.0-dev

apt-mark hold \
 gir1.2-clutter-1.0 \
 gir1.2-cogl-1.0 \
 gir1.2-coglpango-1.0 \
 gir1.2-mash-0.3-0 \
 gir1.2-mx-2.0 \
 libclutter-1.0-0 \
 libclutter-1.0-common \
 libclutter-imcontext-0.1-0 \
 libclutter-imcontext-0.1-bin \
 libcluttergesture-0.0.2-0 \
 libcogl-common \
 libcogl-pango20 \
 libcogl-path20 \
 libcogl20 \
 libmash-0.3-0 \
 libmx-2.0-0 \
 libmx-bin \
 libmx-common \

if [ ! -d ${TOGGLE_ENVIRONMENT} ]; then
  python3 -m venv ${TOGGLE_ENVIRONMENT}
fi

if [ ! -d ${TOGGLE_ENVIRONMENT}/src/toggle ]; then
  mkdir -p ${TOGGLE_ENVIRONMENT}/src/toggle
  rm -rf ${TOGGLE_ENVIRONMENT}/src/toggle
  git clone --no-single-branch --depth 1 ${TOGGLE_REPOSITORY} ${TOGGLE_ENVIRONMENT}/src/toggle
fi

# Register toggle in the Select_A_Service configuration
cat >> /usr/local/etc/Select_A_Service.conf <<EOF
[toggle]
name=${TOGGLE_BRANCH}
virtual_environment=Toggle-${TOGGLE_BRANCH}
printer=None
EOF

cat > /usr/local/bin/toggle <<EOF
#!/bin/bash
# This shim runs the version of toggle selected
# by the Select_A_Service configuration

VENV=\`/usr/local/bin/environment_for toggle\`

/usr/local/\${VENV}/bin/toggle
EOF

chmod +x /usr/local/bin/toggle

cat > /usr/local/bin/update-toggle <<EOF
#!/bin/bash
# This shim runs the version of the toggle updater
# selected by the Select_A_Service configuration

VENV=\`/usr/local/bin/environment_for toggle\`

/usr/local/\${VENV}/bin/update-toggle
EOF

chmod +x /usr/local/bin/update-toggle

# Install Umikaze specific systemd script
cat > /lib/systemd/system/toggle.service <<EOF
[Unit]
Description=The Redeem/Replicape Graphical user interface
After=octoprint.service sgx-startup.service
Requires=octoprint.service sgx-startup.service

[Service]
Type=simple
ExecStartPre=/bin/systemctl stop getty@tty1.service
ExecStartPre=/bin/bash -c '/bin/echo 0 > /sys/class/graphics/fbcon/cursor_blink'
ExecStart=/usr/local/bin/toggle
ExecStopPost=/bin/systemctl start getty@tty1.service
ExecStopPost=/bin/bash -c '/bin/echo 1 > /sys/class/graphics/fbcon/cursor_blink'

[Install]
WantedBy=basic.target
EOF

# Provide permissions to restart toggle
echo "%octo ALL=NOPASSWD: /bin/systemctl restart toggle.service" >> /etc/sudoers.d/octo

# Do the actual installation
source ${TOGGLE_ENVIRONMENT}/bin/activate
cd ${TOGGLE_ENVIRONMENT}/src
git clone --no-single-branch --depth=1 https://github.com/liamw9534/pyconnman
cd pyconnman

pip3 install wheel
pip3 install pycairo
pip3 install pygobject

python setup.py clean install

cd ${TOGGLE_ENVIRONMENT}/src/toggle
git fetch
git checkout $TOGGLE_BRANCH
pip install -e . -r requirements.txt
python3 setup.py clean install

#This is a hack for Umikaze 2.2.1 compatibility
__TOGGLE_ENVIRONMENT=${TOGGLE_ENVIRONMENT}
TOGGLE_ENVIRONMENT=""

# Make profiles uploadable via Octoprint
mkdir -p ${TOGGLE_ENVIRONMENT}/etc/toggle
cp configs/*.cfg ${TOGGLE_ENVIRONMENT}/etc/toggle/
touch ${TOGGLE_ENVIRONMENT}/etc/toggle/local.cfg
chown -R octo:octo ${TOGGLE_ENVIRONMENT}/etc/toggle

#Undo hack for Umikaze 2.2.1 compatibility
TOGGLE_ENVIRONMENT=${__TOGGLE_ENVIRONMENT}

chown -R octo:octo ${TOGGLE_ENVIRONMENT}

systemctl enable toggle
