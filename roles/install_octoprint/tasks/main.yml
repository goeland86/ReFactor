---
- name: copy the resolv.conf file
  shell: cp /etc/resolv.conf /etc/resolv.conf.bak

- name: remove nginx / apache / iptables
  apt:
    name:
      - nginx
      - apache2
      - iptables
    state: absent

- name: reinstall resolv.conf
  shell: mv /etc/resolv.conf.bak /etc/resolv.conf

- name: Install python3.7
  apt:
    name:
      - iptables
      - python3.7
      - python3-pip
    state: present

- name: verify python3-virtualenv is present
  pip:
    name: virtualenv
    executable: pip3

- name: ensure the debian user exists
  user:
    name: debian
    comment: Default user for OctoPrint
    shell: /bin/bash
    groups: tty,dialout
    append: yes
    expires: -1
    home: /home/debian

# iptables -t nat -A PREROUTING -p tcp --dport $srcPortNumber -j REDIRECT --to-port $dstPortNumber

- name: create iptables port forward with iptables-legacy
  shell:
    cmd: iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 5000

- name: create home octoprint folder
  file:
    path: /home/debian/.octoprint
    state: directory
    owner: debian
    group: debian

- name: give debian permissions to python folders for updates
  file:
    path: '{{ item }}'
    group: debian
    owner: debian
    mode: 0755
    recurse: yes
    state: directory
  with_items:
    - '{{ octoprint_home }}/..'
    - /usr/local/lib/python3
    - /usr/local/lib/python3.6
    - /usr/local/bin

- name: Make octoprint config folder
  file:
    path: "{{ octoprint_home}}/../.octoprint"
    state: directory
    owner: debian
    group: debian

- name: Insert octoprint config
  copy:
    src: "{{ role_path }}/files/config.yaml"
    dest: "{{ octoprint_home }}/../.octoprint/config.yaml"
    owner: debian
    group: debian
    force: no


- name: Use pip to install OctoPrint
  pip:
    chdir: '{{ octoprint_home }}'
    virtualenv: '{{ octoprint_home }}/venv'
    virtualenv_python: python3.7
    state: latest
    name: git+https://github.com/foosel/OctoPrint.git
  become_user: debian


#- name: Use pip to install Octoprint-filemanager
#  pip:
#    chdir: '{{ octoprint_home }}'
#    virtualenv: '{{ octoprint_home }}/venv'
#    state: latest
#    name: https://github.com/Salandora/OctoPrint-FileManager/archive/master.zip
#  become_user: debian

#- name: Use pip to install Octoprint-SystemCommandEditor
#  pip:
#    chdir: '{{ octoprint_home }}'
#    virtualenv: '{{ octoprint_home }}/venv'
#    state: latest
#    name: https://github.com/Salandora/OctoPrint-SystemCommandEditor/archive/master.zip
#  become_user: debian


- name: Have the upload folder ready
  file:
    path: /usr/share/models
    state: directory
    owner: debian
    group: debian
    mode: 0777

- name: annotate OctoPrint port in services
  lineinfile:
    path: /etc/services
    line: octoprint 5000/tcp
    state: present

- name: make sure the sudoers.d/debian file exists
  file:
    path: /etc/sudoers.d/debian
    owner: root
    group: root
    state: touch

- name: grant debian user sudo privileges for some commands
  blockinfile:
    path: /etc/sudoers.d/debian
    block: |
      %debian ALL=NOPASSWD: /bin/systemctl restart octoprint.service
      %debian ALL=NOPASSWD: /sbin/reboot
      %debian ALL=NOPASSWD: /sbin/shutdown -h now
      %debian ALL=NOPASSWD: /sbin/poweroff

- name: install service file for OctoPrint
  copy:
    src: '{{ role_path }}/files/octoprint.service'
    dest: /lib/systemd/system/octoprint.service
    owner: root
    group: root
    mode: 0644


- name: enable octoprint service
  service:
    name: octoprint
    enabled: yes

- name: allow debian user access to relevant folders
  file:
    path: "{{ item }}"
    owner: debian
    group: debian
    state: directory
    recurse: yes
  with_items:
    - /usr/src/Umikaze
    - /home/debian
